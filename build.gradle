plugins { id 'org.hidetake.ssh' version '1.0.5' }
apply plugin: 'ear'

def libs = [
        // Test
        junit        : 'junit:junit:4.11',

        // Compile
        lombok       : 'org.projectlombok:lombok:1.16.10',
        // Provided by container
        javaee       : 'javax:javaee-api:7.0',
        eclipselink  : 'org.eclipse.persistence:eclipselink:2.6.3',
        slf4j        : 'org.slf4j:slf4j-api:1.7.5',
        // Included in project
        guava        : 'com.google.guava:guava:18.0',
        orika        : 'ma.glasnost.orika:orika-core:1.4.3',
//        objectpool   : 'nf.fr.eraasoft:objectpool:1.1.3-SNAPSHOT',
        jackson      : 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.2',
//        quartz       : 'org.quartz-scheduler:quartz:2.2.3',
        // Maxmind
//        maxmind      : 'com.maxmind.geoip2:geoip2:2.1.0',
        //elastic search
//        elasticsearch: 'org.elasticsearch:elasticsearch:1.7.1',
        // Non-managed
//        in3dsecure   : files('lib/in3dsecure.jar')
]

allprojects {

   apply plugin: 'java'

   sourceCompatibility = '1.8'
   [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

//   repositories {
//      maven { url 'http://nebula.lpb.lv/nexus/content/groups/public/' }
//   }

   configurations {
      provided
      earCompile {
         transitive = true
//         exclude module: 'google-http-client'
      }
   }
   sourceSets.all {
      output.resourcesDir = output.classesDir
   }
   sourceSets {
      main { compileClasspath += configurations.provided + configurations.earCompile }
      test {
         compileClasspath += configurations.provided + configurations.earCompile
         runtimeClasspath += configurations.provided + configurations.earCompile
      }
   }

   // Always include these dependencies
   dependencies {
      testCompile libs.junit
      compile libs.lombok
      provided libs.slf4j
      provided libs.javaee
//      provided libs.eclipselink
      earCompile libs.guava
      earCompile(libs.orika) {
         exclude group: 'org.slf4j' // Provided by APP container
      }
   }

}

project(':data') {
   dependencies {
//      earCompile libs.objectpool
      earCompile libs.jackson
      compile libs.jackson
      //warning: Cannot find annotation method 'shape()' in type 'JsonFormat': class file for com.fasterxml.jackson.annotation.JsonFormat not found
   }
}

project(':ui') {
   dependencies {
      provided project(':data')
//      earCompile libs.maxmind
//      earCompile libs.in3dsecure
//      earCompile libs.elasticsearch
   }
}


dependencies {
   earlib project(path: ':data', configuration: 'earCompile')
   earlib project(':data')
}

// Add all ear modules
['ui'].each { module ->
   dependencies {
      earlib project(path: ':ecom-' + module, configuration: 'earCompile')
      deploy project(path: ':ecom-' + module, configuration: 'archives')
   }
}

// Set version as commit number + hashcode
ext.revision = 'git rev-list --count HEAD'.execute(null, projectDir).text.trim()
ext.hash = 'git rev-parse --short HEAD'.execute(null, projectDir).text.trim()
version = "r${revision}.${hash}"
ext.parentProjectName = name

ear {
   deploymentDescriptor {
      displayName = 'carRentalManager-ear'
      ['ui'].each { module ->
         webModule(module + '.war', '/' + module)
      }
   }
}

apply from: 'deploy.gradle'
